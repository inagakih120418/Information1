# 基本５　配列

# 配列とは、複数のデータをまとめて格納できる仕組みです。


# 例5-1 配列の基本的な例

"""

a = [3,5,7,9,11]

print(a)

print(a[0])
print(a[1])
print(a[2])
print(a[3])
print(a[4])

"""

# 配列を定義する場合は、次のように記述します。

# -------------------------------------
# 配列名 = [要素0, 要素1, 要素2, ......]
# -------------------------------------


# また、配列に入れた特定の値を使いたい場合は、次のように使います。

# -------------------------------------
# 配列名[添字]
# -------------------------------------

# 要素：配列内に格納される値（数、文字列など）
# 添字：配列内にある要素の場所を表す数字


# 基本的に、配列を定義したときの一番右の要素を0とし、昇順に番号が付けられていきます。

# 配列は、最初に内部の値を定義する方法のほか、後から値を追加する方法もあります。


# 例5-2 配列に後から値を入れる方法

"""

b = []

b.append(2)
b.append(4)
b.append(6)
b.append(8)
b.append(10)

for i in range(0,len(b),1):
    print(b[i])

"""

# このようにappend()関数を使うことで、配列に任意の数字を入れることができます。


# また、配列は次のように多次元的に使うことができます。


# 例5-3 多次元配列

"""

c = [
    ["あ", "い", "う", "え", "お"],
    ["か", "き", "く", "け", "こ"],
    ["さ", "し", "す", "せ", "そ"]
]

print(c)
print(c[0])
print(c[0][0])

"""

# 上記の例は、「あ行」から「さ行」までを2次元配列内に格納したものになります。

# 多次元配列は、配列内の要素を配列にすることで、多重に配列を扱えます。

# -------------------------------------
# 配列名 = [配列1, 配列2, 配列3, ......]
# -------------------------------------

# では、以上の内容を踏まえて、practice_5に取り組んでください。