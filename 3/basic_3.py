# 基本３　反復構造

# 反復構造は「プログラムを繰り返し実行する」構造です。


# 例3-1 選択構造の簡単な例

"""

s = 0

for i in range(1, 6, 1):
    s = s + i

print(s)

"""

# 反復構造では、for文またはWhile文を使います。
# それぞれに特徴があるため、使い分けができると便利です。

# まずはfor文についてやっていきましょう。

# for文にはいくつか書き方がありますが、最も汎用的な書き方が例2-1で使った方法です。


# for 変数 in range(変数の開始値, 変数の終了値, 増減値):
#    繰り返し処理したい内容


# for文で使う変数は、既に定義されている変数を使うこともできますが、基本的には新たに変数を定義します。
# こだわりがなければ、iを使う場合が多いです。

# rangeの後には3つ数字を入力します。

# 開始値は、for文で使う変数の最初の値です。1回目の繰り返しでは、この値が変数に入ります。
# 終了値は、for文で使う変数がこの値以上になる場合に繰り返しを終了するための値です。
# 増減値は、変数を開始値から終了値まで変化させるときの変化量です。


# 例題3-2　開始値、終了値、増減値

"""

for i in range(0,5,1):
    print("現在のiの値: ", i)

print("iが",i, "になったら繰り返しを終了します")

"""


#「繰り返しは変数が終了値以上になる前に終わる」ということに注意しましょう。

# for文は、繰り返したい回数が決まっているときに使いやすい関数です。



# つづいて、while文の繰り返しについても見ていきます。
# 例題3-1をWhile文で書くと、以下の通りになります。

# 例題3-3　While文の繰り返し

"""

s = 0
i = 1

while i <= 5:
    s = s + i
    i = i + 1
    
print(s)

"""


# While文は以下のように書きます。

# while 条件式:
#    処理内容

# While文では、条件式を満たしている場合は常に繰り返しを行います。
# for文と違って繰り返しの度に値が増減する変数を使いたい場合は、例題3-3のように反復構造内できちんと定義することが必要です。

# While文は条件式で繰り返しの判断をしているので、回数が読めない反復構造を作りたいときに便利です。


# 例題3-4　繰り返しの数が変わる反復構造

"""

import random

n = 0
sum = 0
count = 0

while sum <= 500:                       # 変数sumが500を超えるまで繰り返し

    n = random.randint(0,100)         # 変数nに0から100の整数の乱数を代入
    sum = sum + n                     # 変数sumにnを加算
    count = count + 1                   # 変数countを1増加
    print(count, "回目の合計: ", sum)

print("繰り返しは", count, "回目で終わりました")

"""


# このように、While文では、繰り返しの回数が分からない処理でも、条件式に合わせて繰り返すことができます。

# ところで、例題3-4では、次のような記述がありました。

# sum = sum + n
# count = count + 1

# このプログラムは一見すると「代入しようとしている変数に、同じ変数を代入しようとしている」というよくわからない計算を行っているように見えます。

# pythonに限らず、プログラミングでは基本的に「=」を使う際は、

        # 「左辺の『変数』に、右辺の『値』を代入する」

# という意味になります。

# basic_1でも言ったように、「変数」とは「箱のようなもの」です。
# そして、その箱の中身には必ず「値」が入っています。　※値は数値だけでなく、文字列も含みます

#なので、左辺と右辺で同じ変数を使っているように見えても、実際は左辺で変数の空箱を、右辺で変数の中身を使っているわけです。

# sum（sumという箱） = sum（変数samに入っている値） + n（変数nに入っている値）
# count(countという箱) = count(変数countに入っている値) + 1




# 反復構造を使う場合、以下に注意して使いましょう
# ・for文やwhile文の後に「:」（コロン）を必ずつけること
# ・反復構造内の処理は、空白スペース4つ分開けること（インデント）※Spyderではif文を書くとき自動でインデントの処理をしてくれますが、手動で消せてしまうので注意）
# 「for」や「while」の直後はスペース一個分を開けておくこと

# 反復構造の書き方はまだいくつかあります。気になる方は教科書p134に載っている「反復」の部分を読んでみてください。

# では、以上の内容を踏まえて、practice_3に取り組んでください。
