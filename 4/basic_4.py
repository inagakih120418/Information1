# 基本４　関数

# 関数とは、定められた一連の処理を定義し、呼び出すと一連の処理が実行される仕組みです。


# 例4-1 よく使う関数（print()関数、input()関数）

"""

text = input("コンソールに好きな文字を入力し、Enterキーを押してください: ")

print("入力した文字: ", text)

"""

# print()関数：()内の文字列や変数の中身をコンソールに表示する関数
# input()関数：()内の文字列や変数の中身をコンソールに表示し、入力を受け付ける関数

# 変数には、あらかじめ用意された「組み込み関数」と、ユーザが作成することができる「ユーザ定義関数」があります。

# print()関数やinput()関数は組み込み関数です。
# それ以外にも、多くの組み込み関数がありますが、興味のある人は教科書p186～p188をご覧ください。


# 関数には、「引数」と「戻り値」があります。

# 引数：()内に入れるモノ
# 戻り値：関数を実行したときに出てくるモノ

# 以下では例として、三角形の面積を求めるユーザ定義関数を作っています。


# 例4-2 三角形の面積を求める関数

"""

def triangle(teihen,takasa):

    menseki = teihen * takasa / 2
    
    return menseki

a = 4
b = 5

c = triangle(a,b)
print(c)

"""

# 上記のプログラムでは、変数aに底辺、変数bに高さを入れることで三角形の面積を計算させることができました。


# 関数を作るときは、以下のような構造になります。

# ------------------------------------------
# def 関数名(仮引数1, 仮引数2, 仮引数3, .....)
#
#     処理内容
#
#     return 戻り値
# ------------------------------------------

# 仮引数：関数を作るときに使う引数
# 実引数：関数を使うときに使う引数

# 戻り値を設定すると、関数の処理結果を変数に入れることができます。
# 戻り値を設定しない場合は、関数の処理が行われるだけになります。

# 例4-3 戻り値を設定した場合と設定しない場合

"""

def triangle_return(teihen,takasa):

    menseki = teihen * takasa / 2
    
    return menseki

def triangle_no_return(teihen,takasa):
    
    menseki = teihen * takasa / 2

a = 4
b = 5

c = triangle_return(a,b)
print(c)

d = triangle_no_return(a,b)
print(d)

"""

# これを実行すると、戻り値が設定されている関数を使った方はコンソールに表示されますが、
# 戻り値が設定されていない関数を使った方はうまく表示されません。

# 戻り値を設定しない場合は、関数を定義する時点で、外部の処理を行う必要があります。
# そこで必要なのが、「グローバル変数」と「ローカル変数」の考え方です。

# グローバル変数とは、pythonファイル内で一貫して使える変数のことで、今まで使った変数の大半はグローバル変数です。

# 対して、ローカル変数とは、関数を定義するときに使う、仮置き用の変数です。
# 例4-3でいうところの、「menseki」や「teihen」、「takasa」がローカル変数に当たります。

# 本来、関数を定義するときに使う変数はローカル変数として扱われますが、次のような記述にすると、グローバル変数として扱うことができます。


# 例4-4 関数定義でグローバル変数を使う方法

"""

def triangle_no_return_2(teihen,takasa):
    global m
    m = teihen * takasa / 2

a = 4
b = 5

m = 0

triangle_no_return_2(a,b)

print(m)

"""

# このように、関数定義内で「global 変数名」と記述することで、その変数を関数定義外でも使うことができます。

# では、以上の内容を踏まえて、practice_4に取り組んでください。